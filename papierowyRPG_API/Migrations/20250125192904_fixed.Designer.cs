// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using papierowyRPG_API.Database;

#nullable disable

namespace papierowyRPG_API.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20250125192904_fixed")]
    partial class @fixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("papierowyRPG_API.Models.Character", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StatsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Story")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GameId");

                    b.HasIndex("StatsId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StatsTypeJSON")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.History", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GameId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StatsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StatsId")
                        .IsUnique();

                    b.ToTable("Items");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.Note", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CharacterId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.Skill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StatsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StatsId")
                        .IsUnique();

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.Stats", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatValues")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.Character", b =>
                {
                    b.HasOne("papierowyRPG_API.Models.Game", "Game")
                        .WithMany("Character")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("papierowyRPG_API.Models.Stats", "Stats")
                        .WithOne("Character")
                        .HasForeignKey("papierowyRPG_API.Models.Character", "StatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("papierowyRPG_API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Stats");

                    b.Navigation("User");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.History", b =>
                {
                    b.HasOne("papierowyRPG_API.Models.Game", "Game")
                        .WithMany("History")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.Item", b =>
                {
                    b.HasOne("papierowyRPG_API.Models.Character", "Character")
                        .WithMany("Items")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("papierowyRPG_API.Models.Stats", "Stats")
                        .WithOne("Items")
                        .HasForeignKey("papierowyRPG_API.Models.Item", "StatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.Note", b =>
                {
                    b.HasOne("papierowyRPG_API.Models.Character", "Character")
                        .WithMany("Notes")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.Skill", b =>
                {
                    b.HasOne("papierowyRPG_API.Models.Character", "Character")
                        .WithMany("Skills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("papierowyRPG_API.Models.Stats", "Stats")
                        .WithOne("Skill")
                        .HasForeignKey("papierowyRPG_API.Models.Skill", "StatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.Character", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Notes");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.Game", b =>
                {
                    b.Navigation("Character");

                    b.Navigation("History");
                });

            modelBuilder.Entity("papierowyRPG_API.Models.Stats", b =>
                {
                    b.Navigation("Character");

                    b.Navigation("Items");

                    b.Navigation("Skill");
                });
#pragma warning restore 612, 618
        }
    }
}
